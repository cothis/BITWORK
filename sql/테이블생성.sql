-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- COMPANY Table Create SQL
CREATE TABLE COMPANY
(
    COMPANY_IDX      NUMBER          NOT NULL,
    COMPANY_NAME     VARCHAR2(50)    NOT NULL,
    COMPANY_PHONE    VARCHAR2(30)    NOT NULL,
    COMPANY_EMAIL    VARCHAR2(50)    NULL,
    CONSTRAINT COMPANY_PK PRIMARY KEY (COMPANY_IDX)
)
    /

create sequence COMPANY_SEQ start with 1 increment by 1 nocache;
/

COMMENT ON TABLE COMPANY IS '회사'
/

COMMENT ON COLUMN COMPANY.COMPANY_IDX IS '회사번호'
/

COMMENT ON COLUMN COMPANY.COMPANY_NAME IS '회사명'
/

COMMENT ON COLUMN COMPANY.COMPANY_PHONE IS '회사전화번호'
/

COMMENT ON COLUMN COMPANY.COMPANY_EMAIL IS '회사이메일(유니크)'
/

ALTER TABLE COMPANY
    ADD CONSTRAINT UC_COMPANY_EMAIL UNIQUE (COMPANY_EMAIL)
    /


-- COMPANY Table Create SQL
CREATE TABLE MEMBER
(
    ID             VARCHAR2(30)    NOT NULL,
    PW             VARCHAR2(30)    NOT NULL,
    NAME           VARCHAR2(30)    NOT NULL,
    PICTURE        NUMBER(1)       DEFAULT 0 NULL,
    PHONE          VARCHAR2(30)    NOT NULL,
    EMAIL          VARCHAR2(50)    NOT NULL,
    POSITION       VARCHAR2(50)    DEFAULT '사원' NOT NULL,
    REGDATE        DATE            DEFAULT SYSDATE NOT NULL,
    COMPANY_IDX    NUMBER          NULL,
    JOINDATE       DATE            NULL,
    GRADE          NUMBER          NULL,
    CONSTRAINT MEMBER_PK PRIMARY KEY (ID)
)
    /

COMMENT ON TABLE MEMBER IS '회원'
/

COMMENT ON COLUMN MEMBER.ID IS '아이디'
/

COMMENT ON COLUMN MEMBER.PW IS '비밀번호'
/

COMMENT ON COLUMN MEMBER.NAME IS '이름'
/

COMMENT ON COLUMN MEMBER.PICTURE IS '사진있는지 여부'
/

COMMENT ON COLUMN MEMBER.PHONE IS '전화번호'
/

COMMENT ON COLUMN MEMBER.EMAIL IS '이메일'
/

COMMENT ON COLUMN MEMBER.POSITION IS '직급'
/

COMMENT ON COLUMN MEMBER.REGDATE IS '가입일자'
/

COMMENT ON COLUMN MEMBER.COMPANY_IDX IS '회사번호'
/

COMMENT ON COLUMN MEMBER.JOINDATE IS '입사일자'
/

COMMENT ON COLUMN MEMBER.GRADE IS '등급(0:소속없음, 1:직원, 2:사장)'
/

ALTER TABLE MEMBER
    ADD CONSTRAINT FK_MEMBER_COMPANY_IDX_COMPANY_ FOREIGN KEY (COMPANY_IDX)
        REFERENCES COMPANY (COMPANY_IDX)
    /

ALTER TABLE MEMBER
    ADD CONSTRAINT UC_EMAIL UNIQUE (EMAIL)
    /


-- COMPANY Table Create SQL
CREATE TABLE BOARD
(
    BOARD_IDX    NUMBER            NOT NULL,
    MEMBER_ID    VARCHAR2(30)      NOT NULL,
    STATUS       NUMBER(1)         DEFAULT 1 NOT NULL,
    SUBJECT      VARCHAR2(30)      NOT NULL,
    CONTENT      VARCHAR2(1500)    NOT NULL,
    FILE_NAME    VARCHAR2(50)      NULL,
    ORI_NAME     VARCHAR2(50)      NULL,
    REGDATE      DATE              DEFAULT SYSDATE NOT NULL,
    CONSTRAINT BOARD_PK PRIMARY KEY (BOARD_IDX)
)
    /

create sequence BOARD_SEQ start with 1 increment by 1 nocache;
/

COMMENT ON COLUMN BOARD.BOARD_IDX IS '글번호'
/

COMMENT ON COLUMN BOARD.MEMBER_ID IS '회원 아이디'
/

COMMENT ON COLUMN BOARD.STATUS IS '0(공지글), 1(일반글)'
/

COMMENT ON COLUMN BOARD.SUBJECT IS '제목'
/

COMMENT ON COLUMN BOARD.CONTENT IS '내용'
/

COMMENT ON COLUMN BOARD.FILE_NAME IS '파일시스템에 저장된 실제 이름'
/

COMMENT ON COLUMN BOARD.ORI_NAME IS '사용자가 올린 파일 이름'
/

COMMENT ON COLUMN BOARD.REGDATE IS '글 등록일'
/

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_MEMBER_ID_MEMBER_ID FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
    /

-- COMPANY Table Create SQL
CREATE TABLE ADDRESSBOOK
(
    ADDRESSBOOK_IDX    NUMBER          NOT NULL,
    NAME               VARCHAR2(20)    NOT NULL,
    PHONE              VARCHAR2(30)    NOT NULL,
    EMAIL              VARCHAR2(50)    NOT NULL,
    COMPANY            VARCHAR2(50)    NOT NULL,
    PICTURE            NUMBER(1)       DEFAULT 0 NULL,
    CONSTRAINT ADDRESSBOOK_PK PRIMARY KEY (ADDRESSBOOK_IDX)
)
    /

create sequence ADDRESSBOOK_SEQ start with 1 increment by 1 nocache;
/

COMMENT ON TABLE ADDRESSBOOK IS '주소록'
/

COMMENT ON COLUMN ADDRESSBOOK.ADDRESSBOOK_IDX IS '주소록 번호'
/

COMMENT ON COLUMN ADDRESSBOOK.NAME IS '이름'
/

COMMENT ON COLUMN ADDRESSBOOK.PHONE IS '전화번호'
/

COMMENT ON COLUMN ADDRESSBOOK.EMAIL IS '이메일'
/

COMMENT ON COLUMN ADDRESSBOOK.COMPANY IS '회사명'
/

COMMENT ON COLUMN ADDRESSBOOK.PICTURE IS '사진있는지 여부'
/

-- COMPANY Table Create SQL
CREATE TABLE COMMUTE
(
    MEMBER_ID    VARCHAR2(30)    NOT NULL,
    C_DATE       DATE            DEFAULT TRUNC(SYSDATE) NOT NULL,
    ON_TIME      DATE            DEFAULT SYSDATE NOT NULL,
    OFF_TIME     DATE            NULL,
    STATUS       NUMBER          DEFAULT 0 NULL,
    CONSTRAINT COMMUTE_PK PRIMARY KEY (MEMBER_ID, C_DATE)
)
    /

COMMENT ON TABLE COMMUTE IS '출퇴근 기록'
/

COMMENT ON COLUMN COMMUTE.MEMBER_ID IS '회원 아이디'
/

COMMENT ON COLUMN COMMUTE.C_DATE IS '출근일자'
/

COMMENT ON COLUMN COMMUTE.ON_TIME IS '출근시간'
/

COMMENT ON COLUMN COMMUTE.OFF_TIME IS '퇴근시간'
/

COMMENT ON COLUMN COMMUTE.STATUS IS '출근시간이 9시보다 크면 1(지각), 0(정상)'
/

ALTER TABLE COMMUTE
    ADD CONSTRAINT FK_COMMUTE_MEMBER_ID_MEMBER_ID FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
    /

-- COMPANY Table Create SQL
CREATE TABLE SIGN
(
    DOC_NO         NUMBER            NOT NULL,
    DOC_TITLE      VARCHAR2(50)      NOT NULL,
    MEMBER_ID      VARCHAR2(30)      NOT NULL,
    INSERT_DATE    DATE              DEFAULT SYSDATE NOT NULL,
    SIGN_DATE      DATE              NULL,
    DOC_STATUS     VARCHAR2(10)      DEFAULT '대기' NOT NULL,
    DOC_CONTENT    VARCHAR2(1500)    NOT NULL,
    FILE_NAME      VARCHAR2(50)      NULL,
    ORI_NAME       VARCHAR2(50)      NULL,
    USER_READ      NUMBER(1)         DEFAULT 0 NULL,
    BOSS_READ      NUMBER(1)         DEFAULT 0 NULL,
    CONSTRAINT SIGN_PK PRIMARY KEY (DOC_NO)
)
    /

create sequence SIGN_SEQ start with 1 increment by 1 nocache;
/

COMMENT ON TABLE SIGN IS '전자결재'
/

COMMENT ON COLUMN SIGN.DOC_NO IS '문서번호'
/

COMMENT ON COLUMN SIGN.DOC_TITLE IS '제목'
/

COMMENT ON COLUMN SIGN.MEMBER_ID IS '회원아이디'
/

COMMENT ON COLUMN SIGN.INSERT_DATE IS '작성일자'
/

COMMENT ON COLUMN SIGN.SIGN_DATE IS '결재일'
/

COMMENT ON COLUMN SIGN.DOC_STATUS IS '결재상태'
/

COMMENT ON COLUMN SIGN.DOC_CONTENT IS '결재 문서 내용'
/

COMMENT ON COLUMN SIGN.FILE_NAME IS '파일시스템에 저장된 실제 이름'
/

COMMENT ON COLUMN SIGN.ORI_NAME IS '사용자가 올린 파일 이름'
/

COMMENT ON COLUMN SIGN.USER_READ IS '읽으면 1'
/

COMMENT ON COLUMN SIGN.BOSS_READ IS '읽으면 1'
/

ALTER TABLE SIGN
    ADD CONSTRAINT FK_SIGN_MEMBER_ID_MEMBER_ID FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
    /

-- 테스트 유저 데이터
insert into member(id, pw, name, phone, email)
values('admin', 'admin', 'admin', '010-0000-0000', 'admin@bitworks.com');
commit;
